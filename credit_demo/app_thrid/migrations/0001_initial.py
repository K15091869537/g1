# Generated by Django 2.0.7 on 2020-11-17 11:39

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Emp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('work_num', models.CharField(max_length=20, unique=True, verbose_name='工号')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('banner', models.CharField(max_length=50, verbose_name='轮播图存储路径')),
            ],
        ),
        migrations.CreateModel(
            name='Apply_progress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apply', models.IntegerField(verbose_name='申请状态')),
                ('audit', models.IntegerField(verbose_name='审核状态')),
                ('approval', models.IntegerField(verbose_name='审批状态')),
                ('grant', models.IntegerField(verbose_name='放款状态')),
                ('lendtime', models.DateTimeField(verbose_name='放款时间')),
                ('yq', models.IntegerField(verbose_name='是否逾期')),
            ],
        ),
        migrations.CreateModel(
            name='Auth_user',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account', models.CharField(max_length=20, unique=True, verbose_name='登录账号')),
                ('password', models.CharField(max_length=20, verbose_name='登录密码')),
                ('name', models.CharField(max_length=20, null=True, verbose_name='姓名')),
                ('card', models.CharField(max_length=18, null=True, unique=True, verbose_name='身份证')),
                ('work', models.CharField(max_length=20, null=True, verbose_name='职业')),
                ('tel', models.IntegerField(null=True, verbose_name='电话')),
                ('card_z', models.TextField(null=True, verbose_name='身份证正面')),
                ('card_f', models.TextField(null=True, verbose_name='身份证反面')),
                ('company', models.CharField(max_length=20, null=True, unique=True, verbose_name='公司名称')),
                ('credit_code', models.CharField(max_length=50, null=True, unique=True, verbose_name='统一社会信用代码')),
                ('company_img', models.TextField(null=True, verbose_name='公司资质照片')),
                ('u_type', models.IntegerField(null=True, verbose_name='个人或企业')),
            ],
        ),
        migrations.CreateModel(
            name='Auth_user_emp_information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Eid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='员工ID')),
            ],
        ),
        migrations.CreateModel(
            name='Auth_user_emp_reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Eid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='员工ID')),
            ],
        ),
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID')),
            ],
        ),
        migrations.CreateModel(
            name='Coupons',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_title', models.CharField(max_length=20, verbose_name='优惠券名称')),
                ('c_start', models.DateTimeField(verbose_name='开始使用期限')),
                ('c_stop', models.DateTimeField(verbose_name='截止使用期限')),
                ('discount', models.CharField(max_length=20, verbose_name='折扣')),
            ],
        ),
        migrations.CreateModel(
            name='Coupons_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('t_name', models.CharField(max_length=20, verbose_name='优惠卷类型')),
            ],
        ),
        migrations.CreateModel(
            name='Credit_reporting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_credit', models.IntegerField(verbose_name='贷款记录')),
                ('higher', models.IntegerField(verbose_name='贷款额度')),
                ('overdue', models.IntegerField(verbose_name='逾期记录')),
                ('three_parties', models.IntegerField(verbose_name='第三方贷款记录')),
                ('rate', models.IntegerField(verbose_name='信用度')),
                ('black', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Blacklist', verbose_name='黑名单')),
            ],
        ),
        migrations.CreateModel(
            name='Information',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('i_talk', models.CharField(max_length=500, verbose_name='发送内容')),
                ('i_time', models.DateTimeField(verbose_name='发送日期')),
                ('i_read', models.IntegerField(verbose_name='是否已读')),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Job_name', models.CharField(max_length=20, verbose_name='职位类型')),
            ],
        ),
        migrations.CreateModel(
            name='Laundry_list',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repaid', models.IntegerField(verbose_name='还款金额')),
                ('repaid_time', models.DateTimeField(verbose_name='还款时间')),
                ('surplus', models.IntegerField(verbose_name='未还金额')),
                ('Aid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Apply_progress', verbose_name='受理流程表ID')),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(verbose_name='登录时间')),
                ('operation', models.TextField(verbose_name='操作')),
                ('Uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID')),
            ],
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('ntime', models.DateTimeField(verbose_name='发布时间')),
            ],
        ),
        migrations.CreateModel(
            name='Pays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pay_way', models.CharField(max_length=10, verbose_name='支付方式')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_name', models.CharField(max_length=20, verbose_name='产品名称')),
                ('introduc', models.CharField(max_length=100, verbose_name='产品简介')),
                ('range', models.IntegerField(verbose_name='可贷额度')),
                ('date', models.DateTimeField(verbose_name='贷款周期')),
                ('rate', models.FloatField(verbose_name='利息')),
                ('active', models.IntegerField(verbose_name='办理状态')),
                ('start', models.DateTimeField(verbose_name='开始办理日期')),
                ('stop', models.DateTimeField(verbose_name='截止办理日期')),
                ('permanent', models.IntegerField(verbose_name='办理期限')),
            ],
        ),
        migrations.CreateModel(
            name='Product_type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_type', models.CharField(max_length=20, verbose_name='产品类型')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_talk', models.CharField(max_length=500, verbose_name='回复内容')),
                ('r_time', models.DateTimeField(verbose_name='回复日期')),
                ('r_read', models.IntegerField(verbose_name='是否已读')),
            ],
        ),
        migrations.CreateModel(
            name='User_credit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Cid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Credit_reporting', verbose_name='征信ID')),
                ('Uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID')),
            ],
        ),
        migrations.CreateModel(
            name='user_Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('up_time', models.DateTimeField(verbose_name='申请日期')),
                ('Pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Product', verbose_name='产品ID')),
                ('Uid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='Tid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Product_type', verbose_name='产品类型ID'),
        ),
        migrations.AddField(
            model_name='laundry_list',
            name='Pid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Pays', verbose_name='支付方式'),
        ),
        migrations.AddField(
            model_name='laundry_list',
            name='Uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID'),
        ),
        migrations.AddField(
            model_name='coupons',
            name='c_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Coupons_type', verbose_name='优惠券类型'),
        ),
        migrations.AddField(
            model_name='auth_user_emp_reply',
            name='Rid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Information', verbose_name='回复信息ID'),
        ),
        migrations.AddField(
            model_name='auth_user_emp_reply',
            name='Uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID'),
        ),
        migrations.AddField(
            model_name='auth_user_emp_information',
            name='Iid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Information', verbose_name='站内信息ID'),
        ),
        migrations.AddField(
            model_name='auth_user_emp_information',
            name='Uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID'),
        ),
        migrations.AddField(
            model_name='apply_progress',
            name='Pid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Product', verbose_name='放款金额(关联产品)'),
        ),
        migrations.AddField(
            model_name='apply_progress',
            name='Uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID'),
        ),
        migrations.AddField(
            model_name='emp',
            name='Uid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Auth_user', verbose_name='用户ID'),
        ),
        migrations.AddField(
            model_name='emp',
            name='e_work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Job', verbose_name='职位ID'),
        ),
        migrations.AddField(
            model_name='emp',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='emp',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
